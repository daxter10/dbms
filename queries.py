import pyodbc

# Set up the ODBC connection
connection_string = 'DRIVER={MySQL ODBC 8.0 ANSI Driver};SERVER=localhost;DATABASE=dbmsclg;UID=root;PWD=Worldcup2022@'
connection = pyodbc.connect(connection_string)

# Create a cursor
cursor = connection.cursor()

# Example queries
queries = [
    "SELECT StudentName FROM STUDENT INNER JOIN ENROLLMENT ON STUDENT.RollNo = ENROLLMENT.RollNo",
"SELECT SocName FROM SOCIETY",
"SELECT StudentName FROM STUDENT WHERE StudentName LIKE 'A%'",
"SELECT * FROM STUDENT WHERE Course = 'computer science' OR Course = 'chemistry'",
"SELECT StudentName FROM STUDENT WHERE (RollNo LIKE 'X%' OR RollNo LIKE 'Z%') AND RollNo LIKE '%9'",
"SELECT * FROM SOCIETY WHERE TotalSeats > :N",
"UPDATE SOCIETY SET MentorName = :Harry WHERE SocID = :SS002",
"SELECT SocName FROM SOCIETY INNER JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID GROUP BY SocID HAVING COUNT(*) > 5",
"SELECT StudentName FROM STUDENT INNER JOIN ENROLLMENT ON STUDENT.RollNo = ENROLLMENT.RollNo WHERE SID = (SELECT SocID FROM SOCIETY WHERE SocName = 'NSS') ORDER BY DOB ASC LIMIT 1",
"SELECT SocName FROM SOCIETY INNER JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID GROUP BY SocID ORDER BY COUNT(*) DESC LIMIT 1",
"SELECT SocName FROM SOCIETY INNER JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID GROUP BY SocID ORDER BY COUNT(*) ASC LIMIT 2",
"SELECT StudentName FROM STUDENT WHERE RollNo NOT IN (SELECT RollNo FROM ENROLLMENT)",
"SELECT StudentName FROM ENROLLMENT GROUP BY RollNo HAVING COUNT(*) >= 2",
"SELECT SocName FROM SOCIETY INNER JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID GROUP BY SocID HAVING COUNT(*) = (SELECT MAX(CountSoc) FROM (SELECT COUNT(*) AS CountSoc FROM ENROLLMENT GROUP BY SID) AS Temp)",
"SELECT StudentName, SocName FROM STUDENT LEFT JOIN ENROLLMENT ON STUDENT.RollNo = ENROLLMENT.RollNo LEFT JOIN SOCIETY ON ENROLLMENT.SID = SOCIETY.SocID WHERE SID IS NOT NULL",
"SELECT StudentName FROM STUDENT INNER JOIN ENROLLMENT ON STUDENT.RollNo = ENROLLMENT.RollNo INNER JOIN SOCIETY ON ENROLLMENT.SID = SOCIETY.SocID WHERE SocName IN ('Debating', 'Dancing', 'Sashakt')",
"SELECT SocName FROM SOCIETY WHERE MentorName LIKE '%Gupta%'",
"SELECT SocName FROM SOCIETY GROUP BY SocID HAVING COUNT(*) <= 0.1 * TotalSeats",
"SELECT SocName, (TotalSeats - COUNT(ENROLLMENT.SID)) AS VacantSeats FROM SOCIETY LEFT JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID GROUP BY SOCIETY.SocID",
"UPDATE SOCIETY SET TotalSeats = TotalSeats * 1.1",
"ALTER TABLE ENROLLMENT ADD EnrollmentFees ENUM('yes', 'no') DEFAULT 'no'",
"UPDATE ENROLLMENT SET DateOfEnrollment = '2018-01-15' WHERE SID = 's1'; UPDATE ENROLLMENT SET DateOfEnrollment = CURRENT_DATE() WHERE SID = 's2'; UPDATE ENROLLMENT SET DateOfEnrollment = '2018-01-02' WHERE SID = 's3'",
"CREATE VIEW Society_Enrollment_Count AS SELECT SOCNAME, COUNT(ENROLLMENT.SID) AS TotalEnrolled FROM SOCIETY LEFT JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID GROUP BY SOCIETY.SocID",
"SELECT StudentName FROM STUDENT WHERE RollNo IN (SELECT RollNo FROM ENROLLMENT GROUP BY RollNo HAVING COUNT(*) = (SELECT COUNT(*) FROM SOCIETY))",
"SELECT COUNT(*) FROM SOCIETY INNER JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID GROUP BY SOCIETY.SocID HAVING COUNT(*) > 5",
"ALTER TABLE STUDENT ADD MobileNumber VARCHAR(10) DEFAULT '9999999999'",
"SELECT COUNT(*) FROM STUDENT WHERE DATEDIFF(CURRENT_DATE(), DOB) / 365 > 20",
"SELECT StudentName FROM STUDENT INNER JOIN ENROLLMENT ON STUDENT.RollNo = ENROLLMENT.RollNo WHERE YEAR(DOB) = 2001",
"SELECT COUNT(*) FROM SOCIETY WHERE SocName LIKE 'S%' AND SocName LIKE '%t' GROUP BY SocID HAVING COUNT(*) >= 5",
"SELECT SOCIETY.SocName, MentorName, TotalSeats, COUNT(ENROLLMENT.SID) AS TotalEnrolled, (TotalSeats - COUNT(ENROLLMENT.SID)) AS UnfilledSeats FROM SOCIETY LEFT JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID GROUP BY SOCIETY.SocID"

]

# Execute queries
for query in queries:
    print(f"Executing query: {query}")
    cursor.execute(query)

    # Fetch and print results
    for row in cursor.fetchall():
        print(row)

# Close the cursor and connection
cursor.close()
connection.close()
